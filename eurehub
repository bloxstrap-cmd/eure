local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\137\93","\125\167\115\181"),function(v42) if (v9(v42,2)==81) then local v92=0;while true do if (v92==0) then v30=v8(v11(v42,1,1));return "";end end else local v93=v10(v8(v42,16));if v30 then local v100=v13(v93,v30);v30=nil;return v100;else return v93;end end end);local function v31(v43,v44,v45) if v45 then local v94=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v94-(v94%(4 -3)) ;else local v95=0;local v96;while true do if (0==v95) then v96=2^(v44-1) ;return (((v43%(v96 + v96))>=v96) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + (5 -3) ;v48=1;end if (v48==1) then return (v50 * (732 -476)) + v49 ;end end end local function v34() local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v54 * 16777216) + (v53 * 65536) + (v52 * (493 -237)) + v51 ;end local function v35() local v55=v34();local v56=v34();local v57=1;local v58=(v31(v56,1,20) * (2^32)) + v55 ;local v59=v31(v56,21,31);local v60=((v31(v56,82 -50 )==1) and  -(620 -(555 + 64))) or 1 ;if (v59==(931 -(857 + 74))) then if (v58==0) then return v60 * (0 -0) ;else v59=1;v57=0;end elseif (v59==2047) then return ((v58==(0 -0)) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==3) then return v14(v64);end if (v62==0) then v63=nil;if  not v61 then local v115=0;while true do if (0==v115) then v61=v34();if (v61==0) then return "";end break;end end end v62=1;end if (v62==2) then v64={};for v101=1, #v63 do v64[v101]=v10(v9(v11(v63,v101,v101)));end v62=3;end if (v62==1) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65=0;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (v65==0) then v66={};v67={};v68={};v69={v66,v67,nil,v68};v65=1;end if (v65==1) then v70=v34();v71={};for v103=1,v70 do local v104=0;local v105;local v106;while true do if (v104==0) then v105=v32();v106=nil;v104=1;end if (v104==1) then if (v105==1) then v106=v32()~=0 ;elseif (v105==(861 -(814 + 45))) then v106=v35();elseif (v105==3) then v106=v36();end v71[v103]=v106;break;end end end v69[7 -4 ]=v32();v65=2;end if (v65==2) then for v107=928 -(214 + 713) ,v34() do local v108=v32();if (v31(v108,1,1)==0) then local v118=0;local v119;local v120;local v121;while true do if (v118==2) then if (v31(v120,1 -0 ,1)==1) then v121[2]=v71[v121[1082 -(1020 + 60) ]];end if (v31(v120,2,2)==(1 + 0)) then v121[1426 -(630 + 793) ]=v71[v121[3]];end v118=3;end if (v118==0) then v119=v31(v108,2,3);v120=v31(v108,2 + 2 ,6);v118=1;end if (v118==1) then v121={v33(),v33(),nil,nil};if (v119==0) then local v128=0;while true do if (0==v128) then v121[3]=v33();v121[4]=v33();break;end end elseif (v119==1) then v121[3]=v34();elseif (v119==2) then v121[3]=v34() -(2^16) ;elseif (v119==3) then local v135=0;while true do if (v135==0) then v121[3]=v34() -((1 + 1)^16) ;v121[889 -(261 + 624) ]=v33();break;end end end v118=2;end if (v118==3) then if (v31(v120,9 -6 ,3)==(878 -(282 + 595))) then v121[4]=v71[v121[4]];end v66[v107]=v121;break;end end end end for v109=1,v34() do v67[v109-1 ]=v39();end return v69;end end end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[1640 -(1523 + 114) ];return function(...) local v78=v75;local v79=v76;local v80=v77;local v81=v38;local v82=1;local v83= -(1 + 0);local v84={};local v85={...};local v86=v20("#",...) -(1 -0) ;local v87={};local v88={};for v97=0,v86 do if (v97>=v80) then v84[v97-v80 ]=v85[v97 + 1 ];else v88[v97]=v85[v97 + 1 ];end end local v89=(v86-v80) + 1 ;local v90;local v91;while true do local v98=0;while true do if (v98==0) then v90=v78[v82];v91=v90[4 -3 ];v98=1;end if (v98==1) then if (v91<=44) then if (v91<=(1086 -(68 + 997))) then if (v91<=10) then if (v91<=4) then if (v91<=1) then if (v91==0) then v88[v90[2]]();else v88[v90[1 + 1 ]]={};end elseif (v91<=2) then local v137=v90[1272 -(226 + 1044) ];local v138=v88[v137];local v139=v88[v137 + 2 ];if (v139>0) then if (v138>v88[v137 + 1 ]) then v82=v90[3];else v88[v137 + 3 ]=v138;end elseif (v138<v88[v137 + 1 ]) then v82=v90[3];else v88[v137 + 3 ]=v138;end elseif (v91==3) then v88[v90[6 -4 ]][v88[v90[3]]]=v88[v90[4]];else for v294=v90[2],v90[12 -9 ] do v88[v294]=nil;end end elseif (v91<=(124 -(32 + 85))) then if (v91<=5) then if (v90[2]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91==6) then v88[v90[1749 -(760 + 987) ]]= #v88[v90[3]];else v88[v90[2 + 0 ]]=v88[v90[3]]%v90[1 + 3 ] ;end elseif (v91<=8) then local v140=0;local v141;while true do if (v140==0) then v141=v90[2];do return v21(v88,v141,v83);end break;end end elseif (v91>9) then v88[v90[1915 -(1789 + 124) ]]=v88[v90[3]][v90[4]];else v88[v90[2]]=v90[769 -(745 + 21) ];end elseif (v91<=(6 + 9)) then if (v91<=(32 -20)) then if (v91==(43 -32)) then if v88[v90[2]] then v82=v82 + 1 ;else v82=v90[1 + 2 ];end else local v142=0;local v143;local v144;local v145;while true do if (v142==0) then v143=v90[2];v144=v88[v143];v142=1;end if (1==v142) then v145=v88[v143 + 2 + 0 ];if (v145>(957 -(892 + 65))) then if (v144>v88[v143 + 1 ]) then v82=v90[1058 -(87 + 968) ];else v88[v143 + 3 ]=v144;end elseif (v144<v88[v143 + 1 ]) then v82=v90[7 -4 ];else v88[v143 + 3 ]=v144;end break;end end end elseif (v91<=(23 -10)) then v88[v90[2]]=v73[v90[3]];elseif (v91>14) then v88[v90[3 -1 ]]=v73[v90[13 -10 ]];else v88[v90[2 + 0 ]]=v88[v90[6 -3 ]];end elseif (v91<=18) then if (v91<=(366 -(87 + 263))) then local v148=0;local v149;while true do if (v148==0) then v149=v90[2];v88[v149]=v88[v149](v88[v149 + 1 ]);break;end end elseif (v91==17) then local v214=0;local v215;local v216;local v217;while true do if (v214==1) then v217=v88[v215] + v216 ;v88[v215]=v217;v214=2;end if (v214==2) then if (v216>0) then if (v217<=v88[v215 + 1 ]) then v82=v90[3];v88[v215 + 3 ]=v217;end elseif (v217>=v88[v215 + 1 ]) then local v413=0;while true do if (v413==0) then v82=v90[3];v88[v215 + 3 ]=v217;break;end end end break;end if (0==v214) then v215=v90[2];v216=v88[v215 + 2 ];v214=1;end end else local v218=0;local v219;while true do if (0==v218) then v219=v90[2];do return v21(v88,v219,v83);end break;end end end elseif (v91<=19) then local v150=v90[182 -(67 + 113) ];v88[v150](v21(v88,v150 + 1 ,v90[3]));elseif (v91>(15 + 5)) then do return v88[v90[2]]();end else local v220=v90[2];local v221,v222=v81(v88[v220](v21(v88,v220 + 1 ,v83)));v83=(v222 + v220) -1 ;local v223=0;for v302=v220,v83 do local v303=0;while true do if (v303==0) then v223=v223 + 1 ;v88[v302]=v221[v223];break;end end end end elseif (v91<=32) then if (v91<=26) then if (v91<=23) then if (v91==22) then local v151=0;local v152;while true do if (0==v151) then v152=v90[2];v88[v152]=v88[v152](v21(v88,v152 + 1 ,v83));break;end end else v88[v90[4 -2 ]]= not v88[v90[3]];end elseif (v91<=24) then v88[v90[2]]=v88[v90[3]];elseif (v91==25) then local v224=0;local v225;local v226;while true do if (v224==1) then for v385=v225 + 1 ,v83 do v15(v226,v88[v385]);end break;end if (v224==0) then v225=v90[2];v226=v88[v225];v224=1;end end else v88[v90[2 + 0 ]][v88[v90[11 -8 ]]]=v90[1417 -(447 + 966) ];end elseif (v91<=(79 -50)) then if (v91<=27) then if (v88[v90[2]]==v90[4]) then v82=v82 + 1 ;else v82=v90[955 -(802 + 150) ];end elseif (v91==28) then local v230=v90[2];local v231,v232=v81(v88[v230](v88[v230 + 1 ]));v83=(v232 + v230) -1 ;local v233=0 -0 ;for v306=v230,v83 do local v307=0;while true do if (v307==0) then v233=v233 + 1 ;v88[v306]=v231[v233];break;end end end else local v234=0;local v235;while true do if (v234==0) then v235=v90[2];v88[v235]=v88[v235](v88[v235 + 1 ]);break;end end end elseif (v91<=30) then local v156=0;local v157;while true do if (v156==0) then v157=v90[2];v88[v157]=v88[v157](v21(v88,v157 + (702 -(376 + 325)) ,v83));break;end end elseif (v91>(50 -19)) then do return;end else v88[v90[3 -1 ]]=v88[v90[8 -5 ]][v90[4]];end elseif (v91<=(11 + 27)) then if (v91<=35) then if (v91<=33) then local v158=v90[2];v88[v158](v21(v88,v158 + 1 ,v90[3]));elseif (v91==34) then v88[v90[2]]=v90[3] + v88[v90[4]] ;else v88[v90[2]]=v74[v90[3]];end elseif (v91<=36) then local v159=0;local v160;local v161;local v162;local v163;while true do if (v159==0) then v160=v90[2];v161,v162=v81(v88[v160](v21(v88,v160 + 1 ,v90[3])));v159=1;end if (v159==1) then v83=(v162 + v160) -1 ;v163=0;v159=2;end if (v159==2) then for v334=v160,v83 do v163=v163 + 1 ;v88[v334]=v161[v163];end break;end end elseif (v91>37) then local v241=0;local v242;local v243;while true do if (v241==0) then v242=v90[2];v243=v88[v90[3]];v241=1;end if (v241==1) then v88[v242 + (2 -1) ]=v243;v88[v242]=v243[v90[4]];break;end end else local v244=v90[16 -(9 + 5) ];local v245=v88[v244 + 2 ];local v246=v88[v244] + v245 ;v88[v244]=v246;if (v245>(376 -(85 + 291))) then if (v246<=v88[v244 + 1 ]) then v82=v90[1268 -(243 + 1022) ];v88[v244 + 3 ]=v246;end elseif (v246>=v88[v244 + 1 ]) then v82=v90[3];v88[v244 + 3 ]=v246;end end elseif (v91<=41) then if (v91<=39) then v88[v90[2]][v88[v90[3]]]=v88[v90[4]];elseif (v91>(152 -112)) then v88[v90[2]][v90[3]]=v90[4];else local v250=0;local v251;while true do if (v250==0) then v251=v90[2];v88[v251]=v88[v251]();break;end end end elseif (v91<=(31 + 11)) then local v166=0;local v167;local v168;while true do if (v166==0) then v167=v90[2];v168=v88[v167];v166=1;end if (v166==1) then for v337=v167 + 1 ,v83 do v15(v168,v88[v337]);end break;end end elseif (v91>(1040 -(915 + 82))) then if  not v88[v90[2 + 0 ]] then v82=v82 + 1 ;else v82=v90[3];end else v88[v90[2]]=v90[3]~=0 ;end elseif (v91<=66) then if (v91<=55) then if (v91<=49) then if (v91<=46) then if (v91==(127 -82)) then v74[v90[3]]=v88[v90[2]];else v82=v90[3];end elseif (v91<=47) then local v172=v90[2];v88[v172]=v88[v172]();elseif (v91>48) then local v253=0;local v254;local v255;local v256;local v257;while true do if (v253==1) then v83=(v256 + v254) -1 ;v257=0;v253=2;end if (v253==2) then for v392=v254,v83 do local v393=0;while true do if (0==v393) then v257=v257 + 1 ;v88[v392]=v255[v257];break;end end end break;end if (v253==0) then v254=v90[2];v255,v256=v81(v88[v254](v88[v254 + 1 + 0 ]));v253=1;end end else local v258=0;local v259;local v260;local v261;local v262;while true do if (v258==2) then for v394=v259,v83 do local v395=0;while true do if (v395==0) then v262=v262 + 1 ;v88[v394]=v260[v262];break;end end end break;end if (v258==1) then v83=(v261 + v259) -1 ;v262=0;v258=2;end if (v258==0) then v259=v90[2 -0 ];v260,v261=v81(v88[v259](v21(v88,v259 + 1 ,v83)));v258=1;end end end elseif (v91<=52) then if (v91<=50) then v88[v90[2]][v90[3]]=v88[v90[4]];elseif (v91>51) then v82=v90[257 -(163 + 91) ];else v88[v90[2]]=v40(v79[v90[3]],nil,v74);end elseif (v91<=(1240 -(1069 + 118))) then local v176=0;local v177;local v178;local v179;local v180;while true do if (v176==0) then v177=v90[1932 -(1869 + 61) ];v178,v179=v81(v88[v177](v21(v88,v177 + (2 -1) ,v90[3])));v176=1;end if (v176==1) then v83=(v179 + v177) -(1 + 0) ;v180=0;v176=2;end if (v176==2) then for v339=v177,v83 do v180=v180 + 1 ;v88[v339]=v178[v180];end break;end end elseif (v91==54) then local v265=0;local v266;while true do if (v265==0) then v266=v90[2];v88[v266]=v88[v266](v21(v88,v266 + 1 ,v90[3]));break;end end else v74[v90[3]]=v88[v90[3 -1 ]];end elseif (v91<=60) then if (v91<=57) then if (v91>56) then v88[v90[2]]=v88[v90[3]] + v90[4] ;else v88[v90[2]]=v90[3];end elseif (v91<=58) then do return v88[v90[2]]();end elseif (v91>59) then v88[v90[1 + 1 ]][v90[3]]=v88[v90[4]];else local v271=v90[3 -1 ];do return v88[v271](v21(v88,v271 + 1 ,v90[3]));end end elseif (v91<=63) then if (v91<=61) then local v184=v90[2];v88[v184]=v88[v184](v21(v88,v184 + 1 ,v90[3]));elseif (v91>62) then v88[v90[2]]= #v88[v90[3]];else local v273=0;local v274;while true do if (0==v273) then v274=v90[6 -4 ];do return v88[v274](v21(v88,v274 + 1 ,v90[3]));end break;end end end elseif (v91<=64) then v88[v90[2 + 0 ]][v88[v90[3]]]=v90[4];elseif (v91>65) then v88[v90[2 -0 ]][v90[3]]=v90[4];else v88[v90[2]]=v40(v79[v90[794 -(368 + 423) ]],nil,v74);end elseif (v91<=77) then if (v91<=71) then if (v91<=68) then if (v91==67) then v88[v90[2]]=v88[v90[3]] + v90[4] ;else do return;end end elseif (v91<=(216 -147)) then local v189=v90[2];v88[v189](v21(v88,v189 + 1 ,v83));elseif (v91>70) then v88[v90[2]]=v90[3]~=0 ;else local v279=v90[20 -(10 + 8) ];v88[v279](v88[v279 + 1 ]);end elseif (v91<=(11 + 63)) then if (v91<=(98 -26)) then v88[v90[2]]=v88[v90[3]]%v90[4] ;elseif (v91>73) then local v280=0;local v281;while true do if (v280==0) then v281=v90[2];v88[v281](v88[v281 + 1 ]);break;end end else local v282=v79[v90[3]];local v283;local v284={};v283=v18({},{[v7("\213\200\207\236\38\226\68","\155\138\151\166\130\66\135\60")]=function(v314,v315) local v316=0;local v317;while true do if (v316==0) then v317=v284[v315];return v317[3 -2 ][v317[2]];end end end,[v7("\6\15\74\116\46\57\74\117\60\40","\17\89\80\36")]=function(v318,v319,v320) local v321=0;local v322;while true do if (0==v321) then v322=v284[v319];v322[1 + 0 ][v322[1476 -(1329 + 145) ]]=v320;break;end end end});for v323=1,v90[446 -(416 + 26) ] do local v324=0;local v325;while true do if (v324==0) then v82=v82 + (3 -2) ;v325=v78[v82];v324=1;end if (1==v324) then if (v325[1]==14) then v284[v323-(1 + 0) ]={v88,v325[3]};else v284[v323-1 ]={v73,v325[3]};end v87[ #v87 + 1 ]=v284;break;end end end v88[v90[3 -1 ]]=v40(v282,v283,v74);end elseif (v91<=(1925 -(1409 + 441))) then v88[v90[2]]=v90[441 -(145 + 293) ] + v88[v90[4]] ;elseif (v91>76) then if  not v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end elseif v88[v90[2]] then v82=v82 + 1 ;else v82=v90[721 -(15 + 703) ];end elseif (v91<=83) then if (v91<=80) then if (v91<=78) then local v192=v90[2];v88[v192](v21(v88,v192 + 1 ,v83));elseif (v91>(37 + 42)) then if (v88[v90[2]]==v90[4]) then v82=v82 + 1 ;else v82=v90[441 -(262 + 176) ];end else v88[v90[2]]= not v88[v90[3]];end elseif (v91<=81) then local v193=0;local v194;local v195;local v196;while true do if (v193==0) then v194=v79[v90[433 -(44 + 386) ]];v195=nil;v193=1;end if (v193==1) then v196={};v195=v18({},{[v7("\74\69\115\192\113\127\98","\174\21\26\26")]=function(v345,v346) local v347=v196[v346];return v347[1][v347[2]];end,[v7("\8\158\186\21\32\168\186\20\50\185","\112\87\193\212")]=function(v348,v349,v350) local v351=0;local v352;while true do if (v351==0) then v352=v196[v349];v352[1][v352[2]]=v350;break;end end end});v193=2;end if (2==v193) then for v353=1,v90[1490 -(998 + 488) ] do local v354=0;local v355;while true do if (v354==1) then if (v355[1]==14) then v196[v353-1 ]={v88,v355[3]};else v196[v353-(1 + 0) ]={v73,v355[3]};end v87[ #v87 + (773 -(201 + 571)) ]=v196;break;end if (v354==0) then v82=v82 + 1 ;v355=v78[v82];v354=1;end end end v88[v90[2]]=v40(v194,v195,v74);break;end end elseif (v91>82) then local v287=0;local v288;local v289;while true do if (v287==1) then v88[v288 + 1 ]=v289;v88[v288]=v289[v90[1142 -(116 + 1022) ]];break;end if (v287==0) then v288=v90[2];v289=v88[v90[3]];v287=1;end end else v88[v90[2]]();end elseif (v91<=86) then if (v91<=84) then v88[v90[2]]=v74[v90[3]];elseif (v91==85) then v88[v90[2]]=v88[v90[3]]%v88[v90[4]] ;else v88[v90[4 -2 ]]={};end elseif (v91<=(1293 -(696 + 510))) then v88[v90[2]]=v88[v90[3]]%v88[v90[4]] ;elseif (v91>88) then if (v90[2]==v88[v90[4]]) then v82=v82 + 1 ;else v82=v90[5 -2 ];end else for v328=v90[2],v90[3] do v88[v328]=nil;end end v82=v82 + (1263 -(1091 + 171)) ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--
